swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger Rest Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /projects/{project_id}/branches:
    post:
      operationId: create_branch
      tags:
        - Management
      summary: Create a branch
      description: Create a new branch
      parameters:
        - name: project_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: branch
          in: body
          description: branch
          schema:
            $ref: '#/definitions/Branch'
      responses:
        201:
          description: Successfully created run
  /branches/{branch_id}/cfg:
    get:
      summary: List all results
      operationId: get_branch
      tags:
        - Management
      parameters:
        - name: branch_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Branch'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /branches/{branch_id}:
    get:
      summary: List all results
      operationId: get_branch
      tags:
        - Execution
      parameters:
        - name: branch_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Branch'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /branches/{branch_id}/flows:
    post:
      operationId: create_flow
      tags:
        - Execution
      summary: Create a run
      description: Create a new run
      parameters:
        - name: branch_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        201:
          description: Successfully created run
    get:
      summary: List all runs
      operationId: get_flows
      tags:
        - Execution
      parameters:
        - name: branch_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Flows'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /branches/{branch_id}/stages:
    post:
      operationId: create_stage
      tags:
        - Management
      summary: Create a stage
      description: Create a new stage
      parameters:
        - name: branch_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: stage
          in: body
          description: stage
          schema:
            $ref: '#/definitions/Stage'
      responses:
        201:
          description: Successfully created run
  /flows/{flow_id}:
    get:
      summary: List all results
      operationId: get_flow
      tags:
        - Execution
      parameters:
        - name: flow_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Flow'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /flows/{flow_id}/runs:
    get:
      summary: List all results
      operationId: get_flow_runs
      tags:
        - Execution
      parameters:
        - name: flow_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Runs'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /stages/{stage_id}:
    put:
      operationId: update_stage
      tags:
        - Management
      summary: Update a stage
      description: Update stage settings
      parameters:
        - name: stage_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: stage
          in: body
          description: stage
          schema:
            $ref: '#/definitions/Stage'
      responses:
        201:
          description: Successfully created run
  /stages/{stage_id}/runs:
    post:
      operationId: create_run
      tags:
        - Execution
      summary: Create a run
      description: Create a new run
      parameters:
        - name: stage_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        201:
          description: Successfully created run
    get:
      summary: List all runs
      operationId: get_runs
      tags:
        - Execution
      parameters:
        - name: stage_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Runs'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /runs/{run_id}/results:
    get:
      summary: List all results
      operationId: get_run_results
      tags:
        - Execution
      parameters:
        - name: run_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: start
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Results'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /runs/{run_id}:
    get:
      summary: List all results
      operationId: get_run
      tags:
        - Execution
      parameters:
        - name: run_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Run'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
    put:
      summary: Replay run, start again same jobs
      operationId: replay_run
      tags:
        - Execution
      parameters:
        - name: run_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Run'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /test_case_results/{test_case_result_id}:
    get:
      summary: List all results
      operationId: get_result
      tags:
        - Execution
      parameters:
        - name: test_case_result_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Result'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /test_case_results/{test_case_result_id}/history:
    get:
      summary: List all results
      operationId: get_result_history
      tags:
        - Execution
      parameters:
        - name: test_case_result_id
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
        - name: start
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of runs
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Results'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /jobs:
    post:
      operationId: create_job
      tags:
        - Execution
      summary: Create a job
      description: Create a new job
      parameters:
        - name: job
          in: body
          description: Job to create
          schema:
            required:
              - run
            properties:
              run:
                type: integer
      responses:
        201:
          description: Successfully created run
  /projects:
    get:
      operationId: get_projects
      tags:
        - Execution
      summary: Create a job
      description: Create a new job
      responses:
        201:
          description: Successfully created run


definitions:
  Flow:
    type: "object"
    required:
      - id
      - branch_id
    properties:
      id:
        type: integer
        format: int64
      branch_id:
        type: integer
        format: int64
      created:
        type: string
        format: date-time
      project_id:
        type: integer
        format: int64
      project_name:
        type: string
      branch_id:
        type: integer
        format: int64
      branch_name:
        type: string
      runs:
        type: object
  Flows:
    type: object
    properties:
      items:
        type: array
        $ref: '#/definitions/Flow'
      total:
        type: integer
        format: int64

  Run:
    type: "object"
    required:
      - id
      - project_id
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      project_id:
        type: integer
        format: int64
      project_name:
        type: string
      branch_id:
        type: integer
        format: int64
      branch_name:
        type: string
      flow_id:
        type: integer
        format: int64
      created:
        type: string
        format: date-time
      stage_id:
        type: integer
        format: int64
  Runs:
    type: object
    properties:
      items:
        type: array
        $ref: '#/definitions/Run'
      total:
        type: integer
        format: int64

  Result:
    type: "object"
    required:
      - id
      - job_id
    properties:
      id:
        type: integer
        format: int64
      job_id:
        type: integer
        format: int64
      values:
        type: object
  Results:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Result'
      total:
        type: integer
        format: int64

  Project:
    type: "object"
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
  Projects:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Project'
      total:
        type: integer
        format: int64
  Branch:
    type: "object"
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      project_id:
        type: integer
        format: int64
      project_name:
        type: string
      stages:
        type: object
      flows:
        type: object
  Stage:
    type: "object"
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      branch_id:
        type: integer
        format: int64
      branch_name:
        type: string
      schema:
        type: object
      schema_txt:
        type: string

  ApiError:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string