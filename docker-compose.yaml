version: '3.6'

services:
  server:
    restart: always
    image: 127.0.0.1:5000/kkserver:kk_ver
    build:
      context: server
      target: server
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_ELASTICSEARCH_PORT
      - KRAKEN_ELASTICSEARCH_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
      - KRAKEN_STORAGE_ADDR
      - KRAKEN_CLICKHOUSE_URL
    ports:
      - $KRAKEN_SERVER_PORT:$KRAKEN_SERVER_PORT
    networks:
      - db_net
      - web_net
      - lab_net
    depends_on:
      - postgres
      - controller
      - celery
      - clickhouse
      - clickhouse-proxy

  controller:
    restart: always
    image: 127.0.0.1:5000/kkcontroller:kk_ver
    build:
      context: server
      target: controller
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_ELASTICSEARCH_PORT
      - KRAKEN_ELASTICSEARCH_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
    networks:
      - db_net
    depends_on:
      - celery
      - postgres
      - clickhouse-proxy

  storage:
    restart: always
    image: 127.0.0.1:5000/kkstorage:kk_ver
    build:
      context: server
      target: storage
    environment:
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_PLANNER_URL
      - KRAKEN_STORAGE_DIR
      - KRAKEN_STORAGE_ADDR
    ports:
      - $KRAKEN_STORAGE_PORT:$KRAKEN_STORAGE_PORT
    volumes:
      - kraken-storage:$KRAKEN_STORAGE_DIR
    networks:
      - lab_net
    depends_on:
      - postgres
      - clickhouse-proxy

  celery:
    restart: always
    image: 127.0.0.1:5000/kkcelery:kk_ver
    build:
      context: server
      target: celery
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_ELASTICSEARCH_PORT
      - KRAKEN_ELASTICSEARCH_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
    networks:
      - db_net
    depends_on:
      - postgres
      - redis

  agent:
    restart: always
    image: 127.0.0.1:5000/kkagent:kk_ver
    build:
      context: agent
      dockerfile: docker-agent.txt
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_ELASTICSEARCH_PORT
      - KRAKEN_ELASTICSEARCH_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_AGENT_BUILTIN=1
    networks:
      - lab_net
    depends_on:
      - server
    deploy:
      replicas: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ui:
    image: 127.0.0.1:5000/kkui:kk_ver
    build:
      context: ui
      dockerfile: Dockerfile
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_LOGSTASH_PORT
      - KRAKEN_LOGSTASH_ADDR
      - KRAKEN_ELASTICSEARCH_PORT
      - KRAKEN_ELASTICSEARCH_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
    ports:
      - $KRAKEN_UI_PUBLIC_PORT:80
    networks:
      - web_net
    depends_on:
      - server
    volumes:
      - kraken-storage:$KRAKEN_STORAGE_DIR

  postgres:
    image: postgres:11
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - db_net

  redis:
    image: redis:alpine
    networks:
      - db_net

# ELK
  # elasticsearch:
  #   image: elasticsearch:7.5.0
  #   environment:
  #     ELASTIC_PASSWORD: $ELASTIC_PASSWORD
  #     ES_JAVA_OPTS: "-Xmx512m -Xms512m"
  #     cluster.name: kraken-cluster
  #     network.host: 0.0.0.0
  #     discovery.type: single-node
  #   # ulimits:
  #   #   memlock: -1
  #   #   nofile:
  #   #     hard: 65536
  #   #     soft: 65536
  #   #   nproc: 65538
  #   volumes:
  #     - type: volume
  #       source: elasticsearch
  #       target: /usr/share/elasticsearch/data
  #   ports:
  #     - $KRAKEN_ELASTICSEARCH_PORT:$KRAKEN_ELASTICSEARCH_PORT
  #     - 9300:9300
  #   networks:
  #     - db_net

  # logstash:
  #   image: logstash:7.5.0
  #   command: sh -c "logstash -e 'input { udp { codec => json port => 5959 } } output { elasticsearch { codec => json hosts => \"elasticsearch:9200\" user => \"elastic\" password => \"changeme\" } }'"
  #   ports:
  #     - $KRAKEN_LOGSTASH_PORT:$KRAKEN_LOGSTASH_PORT/udp
  #     - 9600:9600
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - db_net
  #     - lab_net
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   image: kibana:7.5.0
  #   environment:
  #     SERVER_NAME: kibana
  #     ELASTICSEARCH_URL: $KRAKEN_ELASTICSEARCH_URL
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - db_net
  #   depends_on:
  #     - elasticsearch

# clickhouse & co.
  clickhouse:
    # image: yandex/clickhouse-server:20.11.4.13
    image: 127.0.0.1:5000/clickhouse-server:20.11.4.13.kk_ver
    build:
      context: clickhouse
      dockerfile: Dockerfile
    #--ulimit nofile=262144:262144
    volumes:
      - clickhouse:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - db_net

  clickhouse-proxy:
    image: 127.0.0.1:5000/kkchproxy:kk_ver
    build:
      context: clickhouse-proxy
      dockerfile: Dockerfile
    environment:
      - KRAKEN_CLICKHOUSE_URL
    ports:
      - "9001:9001/udp"
    networks:
      - db_net
    depends_on:
      - clickhouse


volumes:
  db-data:
  elasticsearch:
  kraken-storage:
  clickhouse:

networks:
  db_net:
    driver: bridge
  web_net:
    driver: bridge
  lab_net:
    driver: bridge
