version: '3.6'

services:
  server:
    restart: always
    image: 127.0.0.1:5000/kkserver:kk_ver
    build:
      context: server
      target: server
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_CLICKHOUSE_PORT
      - KRAKEN_CLICKHOUSE_ADDR
      - KRAKEN_CLICKHOUSE_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
      - KRAKEN_MINIO_ADDR
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    ports:
      - $KRAKEN_SERVER_PORT:$KRAKEN_SERVER_PORT
    expose:
      - $KRAKEN_SERVER_PORT
    networks:
      - db_net
      - web_net
      - lab_net
    depends_on:
      - postgres
      - controller
      - rq
      - clickhouse
      - clickhouse-proxy

  controller:
    restart: always
    image: 127.0.0.1:5000/kkcontroller:kk_ver
    build:
      context: server
      target: controller
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_CLICKHOUSE_PORT
      - KRAKEN_CLICKHOUSE_ADDR
      - KRAKEN_CLICKHOUSE_URL
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
    networks:
      - db_net
    depends_on:
      - rq
      - postgres
      - clickhouse-proxy

  rq:
    restart: always
    image: 127.0.0.1:5000/kkrq:kk_ver
    build:
      context: server
      target: rq
    environment:
      - KRAKEN_REDIS_ADDR
      - KRAKEN_DB_URL
      - KRAKEN_CLICKHOUSE_PORT
      - KRAKEN_CLICKHOUSE_ADDR
      - KRAKEN_SERVER_PORT
      - KRAKEN_SERVER_ADDR
      - KRAKEN_PLANNER_URL
      - KRAKEN_MINIO_ADDR
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    networks:
      - db_net
    depends_on:
      - postgres
      - redis

  agent:
    restart: always
    image: 127.0.0.1:5000/kkagent:kk_ver
    build:
      context: agent
      dockerfile: docker-agent.txt
    environment:
      - KRAKEN_CLICKHOUSE_ADDR
      - KRAKEN_SERVER_ADDR
      - KRAKEN_AGENT_BUILTIN=1
      - KRAKEN_MINIO_ADDR
    networks:
      - lab_net
    depends_on:
      - server
      - minio
      - clickhouse-proxy
    deploy:
      replicas: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ui:
    image: 127.0.0.1:5000/kkui:kk_ver
    build:
      context: ui
      dockerfile: Dockerfile
    environment:
      - KRAKEN_SERVER_ADDR
    ports:
      - $KRAKEN_UI_PUBLIC_PORT:80
    networks:
      - web_net
    depends_on:
      - server

  postgres:
    image: postgres:11
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - db_net

  redis:
    image: redis:alpine
    networks:
      - db_net

# clickhouse & co.
  clickhouse:
    image: 127.0.0.1:5000/clickhouse-server:20.11.4.13.kk_ver
    build:
      context: clickhouse
      dockerfile: Dockerfile
    #--ulimit nofile=262144:262144
    volumes:
      - clickhouse:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - db_net

  clickhouse-proxy:
    image: 127.0.0.1:5000/kkchproxy:kk_ver
    build:
      context: clickhouse-proxy
      dockerfile: Dockerfile
    environment:
      - KRAKEN_CLICKHOUSE_URL
    ports:
      - $KRAKEN_CLICKHOUSE_PORT:$KRAKEN_CLICKHOUSE_PORT/udp
    expose:
      - $KRAKEN_CLICKHOUSE_PORT
    networks:
      - db_net
      - lab_net
    depends_on:
      - clickhouse

  minio:
    image: minio/minio:RELEASE.2020-12-18T03-27-42Z
    environment:
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    command: server --address :$KRAKEN_MINIO_PORT /data
    volumes:
      - minio:/data
    ports:
      - $KRAKEN_MINIO_PORT:$KRAKEN_MINIO_PORT
    expose:
      - $KRAKEN_MINIO_PORT
    networks:
      - lab_net
      - db_net

volumes:
  db-data:
    labels:
      kraken: true
  clickhouse:
    labels:
      kraken: true
  minio:
    labels:
      kraken: true

networks:
  db_net:
    driver: bridge
  web_net:
    driver: bridge
  lab_net:
    driver: bridge
